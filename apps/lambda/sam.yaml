AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: >-
  Amazon API Gateway.
Resources:
  GreetingFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: org.aws.samples.compute.greeting.GreetingHandler::handleRequest
      Runtime: java8
      CodeUri: ../../services/greeting/target/greeting.zip
      Description: >-
        Amazon API Gateway.
      MemorySize: 1024
      Timeout: 20
      Events:
        greet:
          Type: Api
          Properties:
            Path: /resources/greeting
            Method: GET
            RestApiId: !Ref GreetingApi
  GreetingApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: "2.0"
        paths:
          "/resources/greeting":
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GreetingFunction.Arn}/invocations"
                responses: {}
  NameFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: org.aws.samples.compute.name.NameHandler::handleRequest
      Runtime: java8
      CodeUri: ../../services/name/target/name.zip
      Description: >-
        Amazon API Gateway.
      MemorySize: 1024
      Timeout: 20
      Events:
        findname:
          Type: Api
          Properties:
            Path: /resources/names/{id}
            Method: GET
            RestApiId: !Ref NameApi
        names:
          Type: Api
          Properties:
            Path: /resources/names
            Method: GET
            RestApiId: !Ref NameApi
  NameApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: "2.0"
        definitions:
          Name:
            type: "object"
            properties:
              id: 
                type: "number"
              name:
                type: "string"
        paths:
          "/resources/names":
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NameFunction.Arn}/invocations"
                responses: {}
          "/resources/names/{id}":
            get:
              produces:
                - text/plain
              parameters:
                - name: id
                  in: path
                  required: true
                  type: number
              responses:
                "200":
                  content:
                    text/plain:
                      scheme:
                        type: string
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${NameFunction.Arn}/invocations"

  WebAppFunction:
    DependsOn:
      - NameApi
      - GreetingApi
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: org.aws.samples.compute.webapp.GreetingHandler::handleRequest
      Runtime: java8
      CodeUri: ../../services/webapp/target/webapp.zip
      Description: >-
        Amazon API Gateway.
      MemorySize: 1024
      Timeout: 20
      Environment:
        Variables:
          GREETING_SERVICE_HOST: !Sub "${GreetingApi}.execute-api.${AWS::Region}.amazonaws.com"
          GREETING_SERVICE_PORT: 443
          GREETING_SERVICE_PATH: "/Prod/resources/greeting"
          GREETING_SERVICE_HTTPS: true
          NAME_SERVICE_HOST: !Sub "${NameApi}.execute-api.${AWS::Region}.amazonaws.com"
          NAME_SERVICE_PORT: 443
          NAME_SERVICE_PATH: "/Prod/resources/names/1"
          NAME_SERVICE_HTTPS: true
      Events:
        names:
          Type: Api
          Properties:
            Path: /
            Method: GET
Outputs:
  ApiUrl:
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
